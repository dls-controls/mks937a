#! Generated by VisualDCT v2.5
#! DBDSTART
#! DBDEND


# mks937aPirg.db
#% macro, __doc__, Template database for a pirani guage connected to
# one channel of an MKS937A Multi-Sensor System
# A note on the optional macros: they default to an appropriate hard-coded
# value if no value is passed for expansion.
# They are provided to allow the default set points to be changed.
# Once the set point needs to be changed it may be necessary to alter 
# various other fields defining the range of allowed values.
# For the majority of applications the defaults should be used.  The levels
# should only be changed at the request of the vacuum group for non-standard
# vacuum systems.
#
# required substitutions:
#% macro, device,  device name
#% macro, port,    serial port (steam device code ie /ty/0/1 => ty_0_1)
#% macro, channel, MKS 937A channel number (1-4)
#
# optional substitutions:
#% macro, name,        Object name, and gui association name
#% macro, rlysp_level, The desired relay setpoint value for the PIRG device.
#% macro, rlysp_drvh,  The DRVH field on control setpoint records
#                      (limits max value of relay setpoint)
#% macro, rlysp_drvl,  The DRVL field on relay setpoint records.
#                      (limits min value of relay setpoint)
#% macro, rlysp_hopr,  The HOPR field on relay setpoint records
#                      (high operator value - helps display set correct range).
#% macro, rlysp_lopr,  The LOPR field on relay setpoint records
#                      (low operator value - helps display set correct range).
#% macro, rlysp_hihi,  The HIHI alarm field on the relay setpoint record.
#% macro, rlysp_lolo,  The LOLO alarm field on the relay setpoint record.
#% macro, rlysp_high,  The HIGH alarm field on the relay setpoint record.
#% macro, rlysp_low ,  The LOW alarm field on the relay setpoint record.
#% macro, rlysp_desc,  The DESC field on the relay setpoint records
#		               (appears as a label on the Pirg EDM screen).

################################################################################

# This associates an edm screen with the template
# % gui, $(name=), edm, mks937aPirg.edl, device=$(device)

# Status
#
#% archiver 10 Monitor
#% controldesk Pressure smon
#
record(mbbi, "$(device):STA") {
  field(DTYP, "stream")
  field(INP, "@mks937a.protocol status($(channel)) $(port) 0")
  field(DESC, "Status")
  field(SCAN, "1 second")
  field(FLNK, "$(device):PDIS")
  field(ZRST, "OK")
  field(ONST, "OK")
  field(TWST, "Above Range")
  field(THST, "At Atmosphere")
  field(FRST, "Low Emission")
  field(FVST, "Filament Off")
  field(SXST, "HV Off")
  field(SVST, "Startup Delay")
  field(EIST, "Below Range")
  field(NIST, "Controlled")
  field(TEST, "Protected State")
  field(ELST, "No Gauge")
  field(TVST, "Not Connected")
  field(TTST, "Wrong Gauge")
  field(FTST, "Bad Command")
  field(FFST, "Locked Out")
  field(UNSV, "MAJOR")
  field(ZRSV, "NO_ALARM")
  field(ONSV, "NO_ALARM")
  field(TWSV, "MINOR")
  field(THSV, "MINOR")
  field(FRSV, "MAJOR")
  field(FVSV, "MAJOR")
  field(SXSV, "MAJOR")
  field(SVSV, "MINOR")
  field(EISV, "NO_ALARM")
  field(NISV, "MINOR")
  field(TESV, "MINOR")
  field(ELSV, "MAJOR")
  field(TVSV, "MAJOR")
  field(TTSV, "MAJOR")
  field(FTSV, "MAJOR")
  field(FFSV, "MAJOR")
}

#############################################################################
# Pressure
# 
# % archiver 1 Monitor
# % controldesk Pressure readback
record(ai, "$(device):P") {
  field(DESC, "Pressure")
  field(DTYP, "stream")
  field(INP, "@mks937a.protocol pressure($(channel)) $(port) 0")
  field(FLNK, "$(device):PLOG")
  field(EGU, "mbar")
  field(PREC, "3")
  field(HOPR, "1000")
  field(LOPR, "0.001")
  field(SDIS, "$(device):PDIS")
  field(DISS, "INVALID")
}

record(calcout, "$(device):ADEL") {
  field(DESC, "deadband")
  field(CALC, "A/B")
  field(OUT, "$(device):P.ADEL")
  field(INPA, "$(device):P")
  field(INPB, "20")
  field(SCAN, "10 second")
}

#
#% archiver 1 Monitor
#
record(calc, "$(device):PLOG") {
  field(DESC, "log Pressure")
  field(EGU, "log")
  field(CALC, "LOG(A)")
  field(INPA, "$(device):P MS")
  field(HOPR, "3")
  field(LOPR, "-3")
  field(ADEL, "0.025")
}


################################################################################
# Relay - Ion Pump Interlock
#
#% archiver 10 Monitor
#
record(ao, "$(device):RLY:SETSP") {
  field(DESC, "$(rlysp_desc=Ion Pump I/L)")
  field(FLNK, "$(device):RLY:SEQ")
  field(EGU, "mbar")
  field(PREC, "1")
  field(HOPR, "$(rlysp_hopr=1.2e2)")
  field(LOPR, "$(rlysp_lopr=2.7e-3)")
  field(DRVH, "$(rlysp_drvh=1.2e2)")
  field(DRVL, "$(rlysp_drvl=2.7e-3)")
  field(DOL, "$(rlysp_level=1.0e-2)")
  field(SDIS, "$(device):RLY:ILKSETSP:NOWRITE")
}

#
#% archiver 10 Monitor
#
record(mbbo, "$(device):RLY:ENABLE") 
  {
  field(DESC, "Enable Relay Setpoint")
  field(FLNK, "$(device):RLY:SEQ")
  field(ZRST, "Force On I/L")
  field(ONST, "I/L Operating")
  field(ZRVL, "1")
  field(ONVL, "2")
  field(ZRSV, "MAJOR")
  field(ONSV, "NO_ALARM")
  field(DOL, "1")
  }

record(seq, "$(device):RLY:SEQ") 
  {
  field(DESC, "Sequence Relay Setpoint")
  field(SELM, "Specified")
  field(SELL, "$(device):RLY:ENABLE.RVAL")
  field(DOL1, "0")
  field(LNK1, "$(device):RLY:DIS PP")
  field(DOL2, "$(device):RLY:SETSP")
  field(LNK2, "$(device):RLY:OUTSP PP")
  field(SDIS, "$(device):RLY:ILKSETSP:NOWRITE")
  }

#
#% archiver 10 Monitor
#% controldesk Ion Pump Interlock readback
#
record(ai, "$(device):RLY:SP") {
  field(DESC, "$(rlysp_desc=Ion Pump I/L)")
  field(DTYP, "stream")
  field(INP, "@mks937a.protocol getsp($(channel),RLY) $(port) 0")
  field(SCAN, "1 second")
  field(EGU, "mbar")
  field(PREC, "1")
  field(HOPR, "$(rlysp_hopr=1.2e2)")
  field(LOPR, "$(rlysp_lopr=2.7e-3)")
  field(HIHI, "$(rlysp_hihi=1.0e3)")
  field(LOLO, "$(rlysp_lolo=2.6e-3)")
  field(HIGH, "$(rlysp_high=1.1e-2)")
  field(LOW, "$(rlysp_low=9.0e-3)")
  field(HHSV, "MAJOR")
  field(LLSV, "MAJOR")
  field(HSV, "MINOR")
  field(LSV, "MINOR")
}

record(ao, "$(device):RLY:OUTSP") 
  {
  field(DESC, "Output Relay Setpoint")
  field(DTYP, "stream")
  field(OUT, "@mks937a.protocol setsp($(channel),RLY) $(port) 0")
  field(SDIS, "$(device):RLY:ILKSETSP:NOWRITE")
  }

record(bo, "$(device):RLY:DIS") {
  field(DESC, "Disable Relay Setpoint")
  field(DTYP, "stream")
  field(OUT, "@mks937a.protocol dissp($(channel),RLY) $(port) 0")
}

record(calc, "$(device):PDIS") {
  field(PHAS, "1")
  field(CALC, "(A>1)?1:0")
  field(INPA, "$(device):STA")
  field(FLNK, "$(device):P")
}

#
# The :CONSTZERO record allows the :ILKSETSP:NOWRITE record (below)
# to have a PV link rather than constant zero value, which would be 
# invalid with the "MS CP" modifiers
#
record(bi, "$(device):CTL:CONSTZERO")
  {
  field(DESC, "Constant zero value")
  field(SCAN, "Passive")
  field(PINI, "YES")
  field(INP, "0")
  field(ZNAM, "Zero")
  field(ONAM, "One")
  }

# Disable the writing of setpoints to hardware so the machine does not trip
# when the IOC is rebooted with lower default interlock pressures
# This record is local to the relay instance, but controlled by the global
# access record - given in the macro parameters. If not supplied, it will
# assume an empty INP and do nothing.
#
# NB: These two records are identical and could have been instantiated via
#     alias. The names are for compatibility with the macros in the EDM screens
#     in which they are referenced.
#
record(bi, "$(device):CTL:ILKSETSP:NOWRITE")
  {
  field(DESC, "ILK setpoint access")
  field(SCAN, "Passive")
  field(PINI, "YES")
  field(INP, "$(ilk_write_access_pv=$(device):CTL:CONSTZERO) MS CP")
  field(ZNAM, "Allow")
  field(ONAM, "Inhibit")
  }
record(bi, "$(device):RLY:ILKSETSP:NOWRITE")
  {
  field(DESC, "ILK setpoint access")
  field(SCAN, "Passive")
  field(PINI, "YES")
  field(INP, "$(ilk_write_access_pv=$(device):CTL:CONSTZERO) MS CP")
  field(ZNAM, "Allow")
  field(ONAM, "Inhibit")
  }
  
# -----------------------------------------------------------------------------------------
# These two records work together to provide one scan
# to correctly initialise just once, records that used to use PINI
# This is to ensure that the autoSR PV referred by ilk_write_access_pv
# is correctly established before any other record processing, to potentially
# avoid overwriting setpoints at IOC startup.
# Essentially, must avoid using PINI for A/S dependent records, otherwise they
# are initialised with the hard-coded DOL value.
#
record(bo, "$(device):CTL:INITSETSPSDIS") 
{
  field(DTYP, "Soft Channel")
  field(VAL, "1")
  field(OUT, "$(device):CTL:INITSETSPFAN.DISA")
}
record(fanout, "$(device):CTL:INITSETSPFAN")
{
    field(DESC, "Relay 1s Scan fanout")
    field(SCAN, "1 second")
    field(LNK1, "$(device):RLY:ENABLE")
    field(LNK2, "$(device):RLY:SETSP")
    field(LNK3, "$(device):CTL:INITSETSPSDIS")
    field(SELM, "All")
}

#! Further lines contain data used by VisualDCT
#! View(0,0,1.0)
#! Record("$(device):STA",20,16,0,0,"$(device):STA")
#! Field("$(device):STA.FLNK",16777215,1,"$(device):STA.FLNK")
#! Link("$(device):STA.FLNK","$(device):PDIS")
#! Field("$(device):STA.VAL",16777215,1,"$(device):STA.VAL")
#! Record("$(device):P",560,345,0,0,"$(device):P")
#! Field("$(device):P.FLNK",16777215,1,"$(device):P.FLNK")
#! Link("$(device):P.FLNK","$(device):PLOG")
#! Field("$(device):P.ADEL",16777215,1,"$(device):P.ADEL")
#! Field("$(device):P.VAL",16777215,1,"$(device):P.VAL")
#! Field("$(device):P.SDIS",16777215,0,"$(device):P.SDIS")
#! Link("$(device):P.SDIS","$(device):PDIS.VAL")
#! Record("$(device):ADEL",900,80,0,0,"$(device):ADEL")
#! Field("$(device):ADEL.OUT",16777215,0,"$(device):ADEL.OUT")
#! Link("$(device):ADEL.OUT","$(device):P.ADEL")
#! Field("$(device):ADEL.INPA",16777215,0,"$(device):ADEL.INPA")
#! Link("$(device):ADEL.INPA","$(device):P.VAL")
#! Record("$(device):PLOG",880,286,0,0,"$(device):PLOG")
#! Field("$(device):PLOG.INPA",16777215,0,"$(device):PLOG.INPA")
#! Link("$(device):PLOG.INPA","$(device):P.VAL")
#! Record("$(device):RLY:SETSP",1120,119,0,0,"$(device):RLY:SETSP")
#! Field("$(device):RLY:SETSP.FLNK",16777215,1,"$(device):RLY:SETSP.FLNK")
#! Link("$(device):RLY:SETSP.FLNK","$(device):RLY:SEQ")
#! Field("$(device):RLY:SETSP.VAL",16777215,1,"$(device):RLY:SETSP.VAL")
#! Record("$(device):RLY:ENABLE",1120,365,0,0,"$(device):RLY:ENABLE")
#! Field("$(device):RLY:ENABLE.FLNK",16777215,1,"$(device):RLY:ENABLE.FLNK")
#! Link("$(device):RLY:ENABLE.FLNK","$(device):RLY:SEQ")
#! Field("$(device):RLY:ENABLE.RVAL",16777215,1,"$(device):RLY:ENABLE.RVAL")
#! Record("$(device):RLY:SEQ",1420,426,0,0,"$(device):RLY:SEQ")
#! Field("$(device):RLY:SEQ.SELL",16777215,0,"$(device):RLY:SEQ.SELL")
#! Link("$(device):RLY:SEQ.SELL","$(device):RLY:ENABLE.RVAL")
#! Field("$(device):RLY:SEQ.LNK1",16777215,1,"$(device):RLY:SEQ.LNK1")
#! Link("$(device):RLY:SEQ.LNK1","$(device):RLY:DIS.VAL")
#! Field("$(device):RLY:SEQ.DOL2",16777215,0,"$(device):RLY:SEQ.DOL2")
#! Link("$(device):RLY:SEQ.DOL2","$(device):RLY:SETSP.VAL")
#! Field("$(device):RLY:SEQ.LNK2",16777215,1,"$(device):RLY:SEQ.LNK2")
#! Link("$(device):RLY:SEQ.LNK2","$(device):RLY:OUTSP.VAL")
#! Record("$(device):RLY:SP",1420,61,0,0,"$(device):RLY:SP")
#! Record("$(device):RLY:OUTSP",1700,582,0,0,"$(device):RLY:OUTSP")
#! Field("$(device):RLY:OUTSP.VAL",16777215,0,"$(device):RLY:OUTSP.VAL")
#! Record("$(device):RLY:DIS",1700,442,0,0,"$(device):RLY:DIS")
#! Field("$(device):RLY:DIS.VAL",16777215,0,"$(device):RLY:DIS.VAL")
#! Record("$(device):PDIS",280,468,0,0,"$(device):PDIS")
#! Field("$(device):PDIS.FLNK",16777215,1,"$(device):PDIS.FLNK")
#! Link("$(device):PDIS.FLNK","$(device):P")
#! Field("$(device):PDIS.VAL",16777215,1,"$(device):PDIS.VAL")
#! Field("$(device):PDIS.INPA",16777215,0,"$(device):PDIS.INPA")
#! Link("$(device):PDIS.INPA","$(device):STA.VAL")
#! TextBox(TB0,340,220,580,260,0,"Dialog",12,1,16777215,"Note: We use DISS to give the record an invalid value if STA isn't good.",null)
